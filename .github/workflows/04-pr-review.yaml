name: "04_PR Review"

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - "samples/04-pr-review/**"

env:
  ARM_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_SKIP_PROVIDER_REGISTRATION: true

defaults:
  run:
    shell: bash
    working-directory: samples/04-pr-review

jobs:
  terraform_deploy:
    name: "Terraform Deploy"
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Workspace
        run: terraform workspace select $DEPLOY_WORKSPACE || terraform workspace new $DEPLOY_WORKSPACE
        env:
          DEPLOY_WORKSPACE: ${{ format('pr{0}', github.event.number) }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve
  
  terraform_destroy:
    name: "Terraform Destroy"
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Workspace
        run: terraform workspace new $DEPLOY_WORKSPACE || true
        env:
          DEPLOY_WORKSPACE: ${{ format('pr{0}', github.event.number) }}

      - name: Terraform Destroy
        run: terraform destroy -auto-approve